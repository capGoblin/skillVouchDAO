type RequestClosed @entity(immutable: true) {
  id: Bytes!
  requestId: BigInt! # uint256
  accepted: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RequestCreated @entity(immutable: true) {
  id: Bytes!
  requestId: BigInt! # uint256
  user: Bytes! # address
  skill: String! # string
  project: String! # string
  experience: String! # string
  stakeAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RequestStatusChanged @entity(immutable: true) {
  id: Bytes!
  requestId: BigInt! # uint256
  _newStatus: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SkillVouched @entity(immutable: true) {
  id: Bytes!
  requestId: BigInt! # uint256
  vouchor: Bytes! # address
  stakedAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteCasted @entity(immutable: true) {
  id: Bytes!
  requestId: BigInt! # uint256
  voter: Bytes! # address
  acceptance: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
